import { jsPDF } from "jspdf"

/**
 * Generate a PDF buffer from assessment data
 * This is a server-side function that doesn't rely on DOM elements
 */
export async function generatePdfBuffer(data: any): Promise<Buffer> {
  // Create PDF
  const pdf = new jsPDF({
    orientation: "portrait",
    unit: "mm",
  })

  // Set font
  pdf.setFont("helvetica")

  // Add title
  pdf.setFontSize(20)
  pdf.setTextColor(0, 0, 0)
  pdf.text("Health Assessment Results", 20, 20)

  // Add date
  pdf.setFontSize(10)
  pdf.setTextColor(100, 100, 100)
  pdf.text(`Generated on ${new Date().toLocaleDateString()}`, 20, 30)

  // Add risk level
  pdf.setFontSize(16)
  pdf.setTextColor(0, 0, 0)
  const riskLevel = data.result.risk.charAt(0).toUpperCase() + data.result.risk.slice(1)
  pdf.text(`Risk Level: ${riskLevel}`, 20, 45)

  // Add risk score
  pdf.setFontSize(14)
  pdf.text(`Risk Score: ${data.result.score}%`, 20, 55)

  // Add health metrics section
  pdf.setFontSize(16)
  pdf.text("Health Metrics", 20, 70)

  // Draw a line
  pdf.setDrawColor(200, 200, 200)
  pdf.line(20, 72, 190, 72)

  // Add metrics
  pdf.setFontSize(12)
  let y = 80

  // Helper function to add a metric
  const addMetric = (label: string, value: string) => {
    pdf.setTextColor(80, 80, 80)
    pdf.text(label, 20, y)
    pdf.setTextColor(0, 0, 0)
    pdf.text(value, 80, y)
    y += 10
  }

  // Add basic metrics
  addMetric("Age:", `${data.age} years`)
  addMetric("Gender:", data.sex === "1" ? "Male" : "Female")
  addMetric("Blood Pressure:", `${data.trestbps} mm Hg`)
  addMetric("Cholesterol:", `${data.chol} mg/dl`)
  addMetric(
    "Chest Pain Type:",
    (() => {
      const types = ["Typical angina", "Atypical angina", "Non-anginal pain", "Asymptomatic"]
      return types[Number.parseInt(data.cp)] || data.cp
    })(),
  )
  addMetric("Fasting Blood Sugar:", data.fbs === "1" ? "Above 120 mg/dl" : "Below 120 mg/dl")

  if (data.thalach) {
    addMetric("Max Heart Rate:", data.thalach)
  }

  addMetric("Exercise Induced Angina:", data.exang === "1" ? "Yes" : "No")

  // Add lifestyle metrics
  if (data.foodHabits) {
    const foodHabitsText =
      data.foodHabits === "vegetarian"
        ? "Vegetarian"
        : data.foodHabits === "non-vegetarian"
          ? "Non-Vegetarian"
          : "Mixed Diet"
    addMetric("Food Habits:", foodHabitsText)
  }

  if (data.junkFoodConsumption) {
    const junkFoodText =
      data.junkFoodConsumption === "low"
        ? "Low (rarely)"
        : data.junkFoodConsumption === "moderate"
          ? "Moderate (weekly)"
          : "High (daily)"
    addMetric("Junk Food Consumption:", junkFoodText)
  }

  if (data.sleepingHours) {
    addMetric("Sleeping Hours:", `${data.sleepingHours} hours/day`)
  }

  // Add disclaimer
  y += 10
  pdf.setFontSize(10)
  pdf.setTextColor(100, 100, 100)
  pdf.text("This assessment is not a medical diagnosis. Please consult with a healthcare provider.", 20, y)

  // Add footer
  pdf.setFontSize(8)
  pdf.setTextColor(150, 150, 150)
  pdf.text(`Generated by HeartPredict on ${new Date().toLocaleDateString()}`, 20, pdf.internal.pageSize.height - 10)

  // Convert to buffer
  const pdfOutput = pdf.output("arraybuffer")
  return Buffer.from(pdfOutput)
}
